if (self.CavalryLogger) { CavalryLogger.start_js(["QQNFBB\/"]); }

__d("EncryptedImgUtils",[],(function(a,b,c,d,e,f){f.extractKey=a;f.isEncrypted=b;var g="ek",h=/^data\:/,i=/\?(ek\=|.*&ek\=)/;function a(a){var b=a.getQueryData(),c=b[g];delete b[g];a.setQueryData(b);return c}function b(a){return!h.test(a)&&i.test(a)}}),null);
__d("getImageSourceURLFromImageish",[],(function(a,b,c,d,e,f){"use strict";e.exports=a;function a(a){if(typeof a==="string")return a;return a!=null&&typeof a==="object"&&(!a.sprited&&a.uri&&typeof a.uri==="string")?a.uri:""}}),null);
__d("validateImageSrcPropType",["URI","coerceImageishSprited","getImageSourceURLFromImageish"],(function(a,b,c,d,e,f){"use strict";e.exports=a;var g;function a(a,c,d){a=a[c];return a==null||b("coerceImageishSprited")(a)||b("getImageSourceURLFromImageish")(a)!==""||a instanceof(g||(g=b("URI")))?null:new Error("Provided `"+c+"` to `"+d+"`. Must be `null`, `undefined`, a string, a `URI` or an `ix` call.")}}),null);
__d("warnUnsupportedProp",["warning"],(function(a,b,c,d,e,f){"use strict";e.exports=a;function a(a,c,d){b("warning")(!1,"%s component does not support prop `%s`.%s",a,c,d?" "+d:"")}}),null);
__d("ImageCore.react",["Bootloader","CometVisualCompletionAttributes","EncryptedImgUtils","FBLogger","SubscriptionsHandler","URI","coerceImageishSprited","coerceImageishURL","createCancelableFunction","getImageSourceURLFromImageish","ifRequired","joinClasses","react","validateImageSrcPropType","warnUnsupportedProp"],(function(a,b,c,d,e,f){"use strict";var g,h,i=g||b("react");c={alt:""};function j(a){return a instanceof(h||(h=b("URI")))?a.toString():a}var k=function(c){babelHelpers.inheritsLoose(a,c);function a(){var a,d;for(var e=arguments.length,f=new Array(e),g=0;g<e;g++)f[g]=arguments[g];return(a=d=c.call.apply(c,[this].concat(f))||this,d.$1=!1,d.$2=null,d.$3=new(b("SubscriptionsHandler"))(),d.state={decryptedSrc:null},a)||babelHelpers.assertThisInitialized(d)}var d=a.prototype;d.$4=function(a){var c=this;this.$2&&this.$2.cancel();var d=b("getImageSourceURLFromImageish")(this.props.encryptedSrc),e=b("createCancelableFunction")(function(a){d===b("getImageSourceURLFromImageish")(c.props.encryptedSrc)&&c.setState({decryptedSrc:a})});a.load(d,e);this.$3.addSubscriptions({remove:function(){e.cancel()}});this.$2=e};d.$5=function(){var a=this;b("ifRequired")("EncryptedImg",function(b){a.$4(b)},function(){if(a.$1)return;a.$1=!0;a.$3.addSubscriptions(b("Bootloader").loadModules(["EncryptedImg"],function(b){return a.$4(b)},"ImageCore.react"))})};d.componentDidMount=function(){this.$5()};d.componentDidUpdate=function(a){a.encryptedSrc!==this.props.encryptedSrc&&this.$5()};d.componentWillUnmount=function(){this.$3.release()};d.render=function(){var a=this.props,c=a.encryptedSrc,d=a.forwardedRef;a=babelHelpers.objectWithoutPropertiesLoose(a,["encryptedSrc","forwardedRef"]);var e=this.state.decryptedSrc;b("EncryptedImgUtils").isEncrypted(c)===!1&&(b("FBLogger")("image").mustfix("The `EncryptedImage` component was rendered with a non-encrypted image (%s). Only images that meet the encrypted image test (see `EncryptedImgUtils.isEncrypted()`) should be rendered with this component. Falling back to `ImageishRenderer`.",JSON.stringify(c)),e=c);return i.jsx(l,babelHelpers["extends"]({},a,{forwardedRef:d,src:e}))};return a}(i.Component);k.defaultProps=c;k.propTypes={encryptedSrc:b("validateImageSrcPropType")};function l(a){var c=a.forwardedRef;a=babelHelpers.objectWithoutPropertiesLoose(a,["forwardedRef"]);var d=b("joinClasses")(a.className,"img"),e=j(a.src);if(e==null)return i.jsx("img",babelHelpers["extends"]({},a,{className:d,ref:c}));var f=b("coerceImageishSprited")(e),g=!!f&&a.alt!=null&&String(a.alt)!==""?i.jsx("u",{children:a.alt}):null;if(typeof e==="string")return i.jsx("img",babelHelpers["extends"]({},a,{className:d,ref:c,src:e,children:g}));if(f){a.src;var h=a.style,k=babelHelpers.objectWithoutPropertiesLoose(a,["src","style"]);return i.jsx("i",babelHelpers["extends"]({},k,b("CometVisualCompletionAttributes").CSS_IMG,{className:b("joinClasses")(d,f.type==="css"?f.className:void 0),ref:c,style:f.type==="cssless"?babelHelpers["extends"]({},h,f.style):h,children:g}))}k=b("getImageSourceURLFromImageish")(e);f=b("coerceImageishURL")(e);return a.width===void 0&&a.height===void 0&&f?i.jsx("img",babelHelpers["extends"]({},a,{className:d,height:f.height,src:k,ref:c,width:f.width,children:g})):i.jsx("img",babelHelpers["extends"]({},a,{className:d,ref:c,src:k,children:g}))}l.defaultProps=c;l.propTypes={src:b("validateImageSrcPropType")};function a(a,c){Object.prototype.hasOwnProperty.call(a,"source")&&b("warnUnsupportedProp")("ImageCore","source","Did you mean `src`?");var d=j(a.src);d=b("getImageSourceURLFromImageish")(d);if(b("EncryptedImgUtils").isEncrypted(d)){a.src;var e=babelHelpers.objectWithoutPropertiesLoose(a,["src"]);return i.jsx(k,babelHelpers["extends"]({},e,{encryptedSrc:d,forwardedRef:c}))}else return i.jsx(l,babelHelpers["extends"]({},a,{forwardedRef:c}))}a.displayName="ImageCore";d=i.forwardRef(a);e.exports=d}),null);
__d("Image.react",["ImageCore.react"],(function(a,b,c,d,e,f){a=b("ImageCore.react");e.exports=a}),null);